version: '3'

services:
  inerp_backend:
    restart: unless-stopped
    container_name: inerp_backend
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - innocule_erp_backend_media:/app/media
    networks:
      - nginxproxyman_default
    depends_on:
      - inerp_postgres
      - inerp_redis

  inerp_notifications:
    restart: unless-stopped
    container_name: notification_service
    build:
      context: ./thirdpartyservices
      dockerfile: Dockerfile
    networks:
      - nginxproxyman_default
    depends_on:
      - inerp_postgres

  inerp_postgres:
    restart: unless-stopped
    container_name: inerp_postgres
    image: postgres:15.5-alpine
    environment:
      POSTGRES_DB: innocule_erp
      POSTGRES_USER: innocule
      POSTGRES_PASSWORD: innocule
    volumes:
      - innocule_erp_db_data:/var/lib/postgresql/data
    networks:
      - nginxproxyman_default

  inerp_redis:
    restart: unless-stopped
    container_name: inerp_redis
    image: redis:7.0.4-alpine
    networks:
      - nginxproxyman_default

  inerp_celery-worker:
    restart: unless-stopped
    container_name: inerp_celery-worker
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: celery -A innoculeerp.celery worker --pool=solo -l info
    depends_on:
      - inerp_postgres
      - inerp_redis
      - inerp_backend
    networks:
      - nginxproxyman_default

  inerp_celery-beat:
    container_name: inerp_celery-beat
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: celery -A innoculeerp beat -l info
    depends_on:
      - inerp_postgres
      - inerp_redis
      - inerp_backend
    networks:
      - nginxproxyman_default

volumes:
  innocule_erp_db_data:
  innocule_erp_backend_media:

networks:
  nginxproxyman_default:
    external: true
